name: Automatic Release

on:
  push:
    branches:
      - main
    paths:
      - 'seafile-server/**'
      - 'seahub/**'
      - 'seahub-media/**'
  workflow_dispatch:
    inputs:
      folder:
        description: 'Which folder to release (seafile-server/seahub/seahub-media)?'
        required: true

jobs:
  create_release:
    runs-on: ubuntu-latest
    steps:
    - name: Check out code
      uses: actions/checkout@v3

    - name: Determine Changed Directory and Extract Version
      id: dir_version
      run: |
        if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
          FOLDER_CHANGED=${{ github.event.inputs.folder }}
        else
          FOLDER_CHANGED=$(git diff --name-only HEAD^ HEAD | cut -d '/' -f1 | uniq)
        fi
        if [[ -f "$FOLDER_CHANGED/Dockerfile" ]]; then
          SEAFILE_VERSION=$(grep 'SEAFILE_VERSION' $FOLDER_CHANGED/Dockerfile | awk -F'SEAFILE_VERSION=' '{print $2}' | awk '{print $1}')
          echo "SEAFILE_VERSION=$SEAFILE_VERSION" >> $GITHUB_ENV
        fi
        echo "FOLDER_CHANGED=$FOLDER_CHANGED" >> $GITHUB_ENV

    - name: Get Previous Build Number and Compute Next
      id: build_number
      run: |
        LATEST_TAG=$(curl -sH "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
        "https://api.github.com/repos/${{ github.repository }}/tags" | \
        jq -r --arg FOLDER "$FOLDER_CHANGED" --arg VERSION "$SEAFILE_VERSION" '.[] | select(.name | startswith($FOLDER + "-" + $VERSION)) | .name' | sort -V | tail -1)
        
        echo "LATEST_TAG=$LATEST_TAG"
        
        if [[ $LATEST_TAG ]]; then
          PREVIOUS_BUILD=$(echo $LATEST_TAG | awk -F_ '{print $2}')
          echo "PREVIOUS_BUILD=$PREVIOUS_BUILD"
          NEXT_BUILD=$(printf "%03d" $((PREVIOUS_BUILD + 1)))
        else
          NEXT_BUILD="001"
        fi
        echo "NEXT_BUILD=$NEXT_BUILD" >> $GITHUB_ENV
        echo "NEXT_BUILD = $NEXT_BUILD"

    - name: Get Last Tag for Folder
      id: last_tag
      run: |
        LAST_TAG=$(curl -sH "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
        "https://api.github.com/repos/${{ github.repository }}/tags" | \
        jq -r --arg FOLDER "$FOLDER_CHANGED" --arg VERSION "$SEAFILE_VERSION" '.[] | select(.name | startswith($FOLDER + "-" + $VERSION)) | .name' | sort -V | tail -1)
        if [[ -z "$LAST_TAG" ]]; then
          echo "LAST_TAG=0" >> $GITHUB_ENV
        else
          echo "LAST_TAG=$LAST_TAG" >> $GITHUB_ENV
        fi

    - name: Get Commit Messages
      run: |
        MESSAGES=""
        if [[ "$LAST_TAG" == "0" ]]; then
          COMMIT_RANGE="--all"
        else
          LAST_COMMIT_FOR_TAG=$(git rev-list -n 1 refs/tags/$LAST_TAG)
          COMMIT_RANGE="${LAST_COMMIT_FOR_TAG}..HEAD"
        fi

        for commit in $(git log --pretty=format:'%H' $COMMIT_RANGE); do
          if git diff-tree --no-commit-id --name-only -r $commit | grep "^$FOLDER_CHANGED/"; then
            MESSAGE=$(git log --format=%B -n 1 $commit)
            MESSAGES="$MESSAGES\n$commit: $MESSAGE"
          fi
        done
        echo "MESSAGES=$MESSAGES" >> $GITHUB_ENV
        echo "MESSAGES=$MESSAGES"

    - name: Create Release
      if: env.FOLDER_CHANGED != '' && env.SEAFILE_VERSION != ''
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.FOLDER_CHANGED }}-${{ env.SEAFILE_VERSION }}_${{ env.NEXT_BUILD }}
        release_name: ${{ env.FOLDER_CHANGED }}-${{ env.SEAFILE_VERSION }}_${{ env.NEXT_BUILD }}
        body: ${{ env.MESSAGES }}
        draft: false
        prerelease: false
